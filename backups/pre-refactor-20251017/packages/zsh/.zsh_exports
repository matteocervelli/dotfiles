# =============================================================================
# ZSH Exports - Matteo Cervelli's dotfiles
# =============================================================================

# =============================================================================
# System Environment Variables
# =============================================================================

# Language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# Default editor preferences
export EDITOR='cursor'
export VISUAL='cursor'

# Pager settings
export PAGER='less'
export LESS='-R'

# =============================================================================
# Development Environment Variables
# =============================================================================

# Development directories
export DEV_DIR="$HOME/dev"
export PROJECTS_DIR="$DEV_DIR/projects"
export DOTFILES_DIR="$HOME/.dotfiles"

# =============================================================================
# PATH Configuration
# =============================================================================

# Ensure unique PATH entries
typeset -U path

# Homebrew paths (Apple Silicon and Intel)
if [[ -d "/opt/homebrew/bin" ]]; then
    export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
elif [[ -d "/usr/local/bin" ]]; then
    export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
fi

# Personal bin directory
if [[ -d "$HOME/.local/bin" ]]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Custom scripts directory
if [[ -d "$HOME/bin" ]]; then
    export PATH="$HOME/bin:$PATH"
fi

# =============================================================================
# Python Environment
# =============================================================================

# Python configuration
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1
export PYTHONHISTORY="$HOME/.python_history"
export PYTHONSTARTUP="$HOME/.pythonrc"

# Pyenv configuration
export PYENV_ROOT="$HOME/.pyenv"
if [[ -d "$PYENV_ROOT/bin" ]]; then
    export PATH="$PYENV_ROOT/bin:$PATH"
fi

# Poetry configuration
export POETRY_VENV_IN_PROJECT=1
export POETRY_CACHE_DIR="$HOME/.cache/poetry"

# Pipenv configuration
export PIPENV_VENV_IN_PROJECT=1

# Pip configuration
export PIP_CONFIG_FILE="$HOME/.pip/pip.conf"
export PIP_TIMEOUT=60

# =============================================================================
# Node.js Environment
# =============================================================================

# NVM configuration
export NVM_DIR="$HOME/.nvm"

# Node.js configuration
export NODE_REPL_HISTORY="$HOME/.node_repl_history"
export NODE_REPL_HISTORY_SIZE=10000

# NPM configuration
export NPM_CONFIG_INIT_AUTHOR_NAME="Matteo Cervelli"
export NPM_CONFIG_INIT_AUTHOR_EMAIL="matteo@cervelli.dev"
export NPM_CONFIG_INIT_AUTHOR_URL="https://matteocervelli.dev"
export NPM_CONFIG_INIT_LICENSE="MIT"

# =============================================================================
# Go Environment
# =============================================================================

# Go configuration
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"
if [[ -d "$GOBIN" ]]; then
    export PATH="$GOBIN:$PATH"
fi

# =============================================================================
# Rust Environment
# =============================================================================

# Rust configuration
export RUSTUP_HOME="$HOME/.rustup"
export CARGO_HOME="$HOME/.cargo"
if [[ -d "$CARGO_HOME/bin" ]]; then
    export PATH="$CARGO_HOME/bin:$PATH"
fi

# =============================================================================
# Java Environment
# =============================================================================

# Java configuration (if using SDKMAN or manual installation)
if [[ -d "$HOME/.sdkman" ]]; then
    export SDKMAN_DIR="$HOME/.sdkman"
fi

# =============================================================================
# Database Environment
# =============================================================================

# PostgreSQL configuration
if [[ -d "/opt/homebrew/opt/postgresql@15/bin" ]]; then
    export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
fi

# MySQL configuration
if [[ -d "/opt/homebrew/opt/mysql/bin" ]]; then
    export PATH="/opt/homebrew/opt/mysql/bin:$PATH"
fi

# =============================================================================
# Security and Authentication
# =============================================================================

# GPG configuration
export GPG_TTY=$(tty)

# SSH configuration (1Password)
export SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"

# =============================================================================
# Development Tools
# =============================================================================

# Git configuration
export GIT_EDITOR="$EDITOR"

# Docker configuration
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# Kubernetes configuration
export KUBECONFIG="$HOME/.kube/config"

# Terraform configuration
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"

# =============================================================================
# Browser and Applications
# =============================================================================

# Default browser
export BROWSER='open'

# =============================================================================
# Homebrew Configuration
# =============================================================================

# Homebrew environment
export HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS=30
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_INSECURE_REDIRECT=1
export HOMEBREW_CASK_OPTS="--require-sha"

# =============================================================================
# History Configuration
# =============================================================================

# ZSH history
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000
export SAVEHIST=10000

# Less history
export LESSHISTFILE="$HOME/.lesshist"

# =============================================================================
# Cache and Temporary Directories
# =============================================================================

# XDG Base Directory specification
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# Create cache directories if they don't exist
[[ ! -d "$XDG_CACHE_HOME" ]] && mkdir -p "$XDG_CACHE_HOME"
[[ ! -d "$XDG_CONFIG_HOME" ]] && mkdir -p "$XDG_CONFIG_HOME"
[[ ! -d "$XDG_DATA_HOME" ]] && mkdir -p "$XDG_DATA_HOME"

# =============================================================================
# Application-Specific Configuration
# =============================================================================

# FZF configuration
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

# Ripgrep configuration
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# Bat configuration (better cat)
export BAT_THEME="GitHub"

# Delta configuration (better git diff)
export DELTA_PAGER="less -R"

# =============================================================================
# Cloud and Infrastructure
# =============================================================================

# AWS configuration
export AWS_PAGER=""

# Google Cloud configuration
if [[ -d "$HOME/.google-cloud-sdk" ]]; then
    export PATH="$HOME/.google-cloud-sdk/bin:$PATH"
fi

# =============================================================================
# macOS-Specific Configuration
# =============================================================================

# Silence macOS Catalina+ zsh warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# Fix for some applications on macOS
export ARCHFLAGS="-arch $(uname -m)"

# =============================================================================
# Performance and Debugging
# =============================================================================

# Increase file descriptor limit
ulimit -n 8192

# Node.js performance
export NODE_OPTIONS="--max-old-space-size=8192"

# =============================================================================
# Project-Specific Environment Variables
# =============================================================================

# Ad Limen project variables
export ADLIMEN_ENV="development"
export ADLIMEN_DEBUG=1

# Tailscale variables
export TAILSCALE_USE_WIP_CODE=1

# =============================================================================
# Custom Functions for Environment Management
# =============================================================================

# Function to reload environment variables
reload_env() {
    source "$HOME/.zsh_exports"
    echo "Environment variables reloaded"
}

# Function to show important environment variables
show_env() {
    echo "=== Important Environment Variables ==="
    echo "EDITOR: $EDITOR"
    echo "DEV_DIR: $DEV_DIR"
    echo "PYENV_ROOT: $PYENV_ROOT"
    echo "NVM_DIR: $NVM_DIR"
    echo "GOPATH: $GOPATH"
    echo "CARGO_HOME: $CARGO_HOME"
    echo "PATH (first 5 entries):"
    echo "$PATH" | tr ':' '\n' | head -5 | sed 's/^/  /'
}

# Function to backup current environment
backup_env() {
    local backup_file="$HOME/.env_backup_$(date +%Y%m%d_%H%M%S)"
    env > "$backup_file"
    echo "Environment backed up to: $backup_file"
}

# =============================================================================
# Conditional Exports (only if programs are installed)
# =============================================================================

# Export variables only if the corresponding programs are installed
command -v pyenv >/dev/null 2>&1 && eval "$(pyenv init -)"
command -v direnv >/dev/null 2>&1 && eval "$(direnv hook zsh)"

# =============================================================================
# End of exports
# =============================================================================