# R2 Asset Manifest Schema
# Version: 1.0
# Purpose: Track binary assets stored in Cloudflare R2
# Location: Each project should have a `.r2-manifest.yml` file in its root directory

# ============================================================================
# SCHEMA DEFINITION
# ============================================================================

project: string                # Project name (required)
                              # Example: "my-ai-app", "discreto-backend"

version: string                # Manifest version (required, default: "1.0")
                              # Semantic versioning recommended: "1.0", "1.1", "2.0"

updated: datetime              # Last update timestamp (required)
                              # Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)
                              # Example: "2025-01-17T10:30:00Z"

assets:                        # List of assets (required, can be empty array)
  - path: string               # Local path relative to project root (required)
                              # Where the file will be in the project
                              # Example: "public/media/logo.svg", "data/models/whisper-large-v3.bin"

    source: string             # Source path in central library (optional)
                              # Used to copy file from ~/media/cdn/ or other central location
                              # Example: "~/media/cdn/logos/adlimen/logo.svg"
                              # If omitted, file is downloaded from R2 directly

    r2_key: string             # R2 object key / bucket path (required)
                              # Format: "project-name/category/filename"
                              # Example: "my-ai-app/models/whisper-large-v3.bin"

    cdn_url: string            # Public CDN URL (optional)
                              # Used when file is served via Cloudflare CDN
                              # Example: "https://cdn.adlimen.com/logos/adlimen/logo.svg"
                              # If omitted, file is private (R2 only)

    size: integer              # File size in bytes (required)
                              # Used for verification and progress display
                              # Example: 2847213568 (2.65 GB)

    sha256: string             # SHA256 checksum (required)
                              # Used for integrity verification after download
                              # Example: "a1b2c3d4e5f6789..."

    type: string               # Asset type (required)
                              # Valid values: model, dataset, media, video, audio, document, data
                              # Used for categorization and selective sync

    dimensions: object         # Image dimensions (optional, images only)
                              # Object with width and height in pixels
                              # Example: {width: 1920, height: 1080}
                              # Automatically extracted by generate-cdn-manifest.sh using ImageMagick
                              # Only present for image files (jpg, png, gif, webp, svg, etc.)
                              # Benefits:
                              #   - Track size changes (800×600 → 1200×900 +50%)
                              #   - No layout shift (set img width/height attributes)
                              #   - Optimize responsive images (generate correct srcset)
                              #   - Performance monitoring (detect oversized images)

    env_mode: string           # Environment mode (optional)
                              # Controls when to use local vs CDN URL
                              # Valid values:
                              #   - cdn-production-local-dev: CDN in production, local in development (default)
                              #     Use for: Most web assets (images, fonts, videos)
                              #     Development: /media/logo.svg (fast, no latency)
                              #     Production: https://cdn.example.com/logo.svg (cached, global)
                              #
                              #   - cdn-always: Always use CDN URL in all environments
                              #     Use for: Shared assets across domains, third-party embeds
                              #     Development: https://cdn.example.com/shared.jpg
                              #     Production: https://cdn.example.com/shared.jpg
                              #
                              #   - local-always: Always use local file path
                              #     Use for: Large ML models, datasets, server-side files
                              #     Development: /data/model.bin (no accidental downloads)
                              #     Production: /data/model.bin (stays on server)
                              # Example: "cdn-production-local-dev"
                              # Works with: lib/assets.ts (TypeScript) and lib/assets.py (Python)

    sync: string               # Sync strategy (optional, default: true for backward compatibility)
                              # Valid values:
                              #   - true/false: Legacy boolean support (true = download, false = manual)
                              #
                              #   - "copy-from-library": Copy from ~/media/cdn/ (fastest, recommended)
                              #     Performance: <0.1s per file (local filesystem copy)
                              #     Fallback: Downloads from R2 if library unavailable
                              #     Use for: Assets in central library
                              #     Example: Logos, fonts shared across projects
                              #
                              #   - "download": Download from R2 directly
                              #     Performance: 1-5s per file (network download)
                              #     Use for: Project-specific assets not in library
                              #     Example: Project screenshots, custom graphics
                              #
                              #   - "cdn-only": Asset is only on CDN, don't sync locally
                              #     Performance: No local sync (verify CDN URL accessible)
                              #     Use for: Assets served only via CDN, not needed locally
                              #     Example: Public hero images, marketing banners
                              #
                              #   - false: Manual download required
                              #     Use for: Very large files (>100MB), selective downloads
                              #     Example: Full training datasets, 4K video files
                              # Example: "copy-from-library"
                              # Best practice: Use copy-from-library for 90%+ of assets

    devices: array             # Target devices (optional)
                              # List of device names that need this asset
                              # Example: [macbook, mac-studio, ubuntu-vm-1]
                              # If omitted, asset syncs to all devices

    description: string        # Human-readable description (optional)
                              # Helpful for team collaboration and documentation
                              # Example: "OpenAI Whisper Large V3 model for transcription"

# ============================================================================
# FIELD TYPE REFERENCE
# ============================================================================

# string    - Text value, quoted or unquoted in YAML
# integer   - Numeric value without decimals
# boolean   - true or false
# datetime  - ISO 8601 formatted timestamp (UTC recommended)
# array     - List of values: [value1, value2, value3]

# ============================================================================
# ASSET TYPES
# ============================================================================

# model      - AI/ML models (.bin, .gguf, .safetensors, .weights, .pt, .h5)
# dataset    - Training data, archives (.tar, .tar.gz, .zip, .parquet)
# media      - Images (.jpg, .png, .gif, .webp, .svg)
# video      - Video files (.mp4, .mov, .avi, .mkv)
# audio      - Audio files (.mp3, .wav, .flac, .m4a)
# document   - Documents (.pdf, .doc, .docx, .epub)
# data       - Generic data files (anything else)

# ============================================================================
# EXAMPLE 1: AI/ML Project with Multiple Models
# ============================================================================

# project: discreto-ai
# version: "1.0"
# updated: 2025-01-17T10:30:00Z
# assets:
#   - path: data/models/whisper-large-v3.bin
#     r2_key: discreto-ai/models/whisper-large-v3.bin
#     size: 2847213568
#     sha256: a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456
#     type: model
#     sync: true
#     devices: [macbook, mac-studio, ubuntu-vm-1]
#     description: "OpenAI Whisper Large V3 model for high-quality transcription"
#
#   - path: data/models/whisper-medium.bin
#     r2_key: discreto-ai/models/whisper-medium.bin
#     size: 1542842368
#     sha256: b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef1234567
#     type: model
#     sync: true
#     devices: [macbook]
#     description: "Whisper Medium model for laptop use (smaller, faster)"
#
#   - path: data/models/embedding-model.bin
#     r2_key: discreto-ai/models/embedding-model.bin
#     size: 438976512
#     sha256: c3d4e5f6789012345678901234567890abcdef1234567890abcdef12345678
#     type: model
#     sync: true
#     description: "Sentence embedding model for RAG system"

# ============================================================================
# EXAMPLE 2: Dataset-Heavy Project with Selective Sync
# ============================================================================

# project: ml-training
# version: "1.0"
# updated: 2025-01-18T15:45:00Z
# assets:
#   - path: data/datasets/training-small.tar.gz
#     r2_key: ml-training/datasets/training-small.tar.gz
#     size: 104857600
#     sha256: d4e5f6789012345678901234567890abcdef1234567890abcdef123456789
#     type: dataset
#     sync: true
#     devices: [macbook, mac-studio]
#     description: "Small training dataset (100MB) for development"
#
#   - path: data/datasets/training-full.tar.gz
#     r2_key: ml-training/datasets/training-full.tar.gz
#     size: 53687091200
#     sha256: e5f6789012345678901234567890abcdef1234567890abcdef1234567890a
#     type: dataset
#     sync: false
#     devices: [mac-studio]
#     description: "Full training dataset (50GB) - manual download only"
#
#   - path: data/datasets/validation.tar.gz
#     r2_key: ml-training/datasets/validation.tar.gz
#     size: 1073741824
#     sha256: f6789012345678901234567890abcdef1234567890abcdef1234567890ab
#     type: dataset
#     sync: true
#     description: "Validation dataset (1GB)"

# ============================================================================
# EXAMPLE 3: Media/Content Project with CDN URLs
# ============================================================================

# project: website-assets
# version: "1.0"
# updated: 2025-01-19T09:00:00Z
# assets:
#   - path: data/media/hero-background.jpg
#     r2_key: website-assets/media/hero-background.jpg
#     cdn_url: https://cdn.example.com/media/hero-background.jpg
#     size: 2097152
#     sha256: 123456789012345678901234567890abcdef1234567890abcdef1234567890
#     type: media
#     sync: true
#     description: "Hero section background image (2MB) - publicly accessible via CDN"
#
#   - path: data/videos/product-demo.mp4
#     r2_key: website-assets/videos/product-demo.mp4
#     cdn_url: https://cdn.example.com/videos/product-demo.mp4
#     size: 52428800
#     sha256: 234567890123456789012345678901abcdef1234567890abcdef12345678901
#     type: video
#     sync: true
#     devices: [macbook, mac-studio]
#     description: "Product demonstration video (50MB) - streamed via CDN"
#
#   - path: data/documents/user-manual.pdf
#     r2_key: website-assets/documents/user-manual.pdf
#     cdn_url: https://cdn.example.com/docs/user-manual.pdf
#     size: 5242880
#     sha256: 34567890123456789012345678901abcdef1234567890abcdef123456789012
#     type: document
#     sync: true
#     description: "User manual PDF (5MB) - public download link"

# ============================================================================
# EXAMPLE 4: Project Using Central Library
# ============================================================================

# This example shows how to use a central media library (~/media/cdn/)
# The project copies only needed files from the library

# project: app-rag
# version: "1.0"
# updated: 2025-01-22T16:00:00Z
# assets:
#   # Logo copied from central library
#   - path: public/media/logo-adlimen.svg
#     source: ~/media/cdn/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     r2_key: media-cdn/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     cdn_url: https://cdn.adlimen.com/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     size: 15234
#     sha256: a1b2c3d4e5f6...
#     type: media
#     sync: true
#     description: "Ad Limen logo - copied from central library"
#
#   # Another logo from library
#   - path: public/media/logo-personal.png
#     source: ~/media/cdn/logos/matteocervelli/logo.png
#     r2_key: media-cdn/logos/matteocervelli/logo.png
#     cdn_url: https://cdn.adlimen.com/logos/matteocervelli/logo.png
#     size: 18865
#     sha256: 226465731b72609fd144c666fef1ffcb12528a58b8018dd279b50ee35f1b5d15
#     type: media
#     sync: true
#     description: "Personal logo - copied from central library"
#
# Workflow:
# 1. Central library ~/media/cdn/ syncs bidirectionally with R2
# 2. Project manifest lists only assets needed for THIS project
# 3. Script copies files from library to project (source → path)
# 4. Development uses local paths: /media/logo-adlimen.svg
# 5. Production build replaces with CDN URLs from manifest

# ============================================================================
# EXAMPLE 5: Empty Project (No Assets Yet)
# ============================================================================

# project: new-project
# version: "1.0"
# updated: 2025-01-20T12:00:00Z
# assets: []

# ============================================================================
# EXAMPLE 6: Environment-Aware Assets with Dimensions
# ============================================================================

# This example shows the enhanced manifest features:
# - Image dimensions automatically extracted
# - Environment-aware URL resolution
# - Smart sync strategies (copy from library vs download)

# project: website-portfolio
# version: "1.1"
# updated: 2025-01-24T16:00:00Z
# assets:
#   # Logo with dimensions, copied from central library
#   - path: public/media/logo-adlimen.svg
#     source: ~/media/cdn/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     r2_key: media-cdn/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     cdn_url: https://cdn.adlimen.com/logos/adlimen/logo-adlimen-stacked-original-bn-transparent-edge.svg
#     size: 15234
#     sha256: a1b2c3d4e5f6...
#     type: media
#     dimensions: {width: 512, height: 512}
#     env_mode: cdn-production-local-dev
#     sync: copy-from-library
#     description: "Ad Limen logo - use local in dev, CDN in production"
#
#   # Hero image with dimensions, downloaded from R2
#   - path: public/images/hero-background.jpg
#     r2_key: website-portfolio/images/hero-background.jpg
#     cdn_url: https://cdn.adlimen.com/portfolio/hero-background.jpg
#     size: 2097152
#     sha256: 123456789012345678901234567890abcdef1234567890abcdef1234567890
#     type: media
#     dimensions: {width: 1920, height: 1080}
#     env_mode: cdn-production-local-dev
#     sync: download
#     description: "Hero section background - Full HD image"
#
#   # Profile photo, always use CDN (don't sync locally)
#   - path: public/images/profile.png
#     r2_key: website-portfolio/images/profile.png
#     cdn_url: https://cdn.adlimen.com/portfolio/profile.png
#     size: 156234
#     sha256: 234567890123456789012345678901abcdef1234567890abcdef12345678901
#     type: media
#     dimensions: {width: 800, height: 800}
#     env_mode: cdn-always
#     sync: cdn-only
#     description: "Profile photo - always served from CDN, no local copy"
#
#   # Non-image asset (no dimensions field)
#   - path: data/content/blog-posts.json
#     r2_key: website-portfolio/data/blog-posts.json
#     size: 45678
#     sha256: 34567890123456789012345678901abcdef1234567890abcdef123456789012
#     type: data
#     env_mode: local-always
#     sync: copy-from-library
#     description: "Blog content - always use local file for development"

# Workflow with environment-aware assets:
# 1. Development: ASSET_MODE=local npm run dev
#    → Uses /media/logo.svg, /images/hero-background.jpg (local files)
#    → Except cdn-always assets which use CDN URL
#
# 2. Production: ASSET_MODE=cdn npm run build
#    → Uses https://cdn.adlimen.com/logos/logo.svg (CDN URLs)
#    → Except local-always assets which use local paths
#
# 3. Sync assets: ~/dotfiles/scripts/sync/sync-project-assets.sh pull
#    → copy-from-library: Fast copy from ~/media/cdn/
#    → download: Download from R2
#    → cdn-only: Skip (verify CDN URL accessible)

# ============================================================================
# USAGE NOTES
# ============================================================================

# 1. This file is a SCHEMA DEFINITION for reference
#    - Copy relevant examples to create your project's `.r2-manifest.yml`
#    - Place `.r2-manifest.yml` in your project root directory

# 2. Generation
#    - Use: ~/dotfiles/scripts/sync/generate-manifest.sh PROJECT_NAME
#    - Scans data/ directory and generates manifest automatically
#    - For central library: ~/dotfiles/scripts/sync/generate-cdn-manifest.sh
#    - Automatically extracts image dimensions (requires ImageMagick: brew install imagemagick)

# 3. Sync Operations
#    - Pull assets: ~/dotfiles/scripts/sync/sync-r2.sh pull PROJECT_NAME
#    - Push assets: ~/dotfiles/scripts/sync/sync-r2.sh push PROJECT_NAME --path FILE

# 4. Best Practices
#    - Commit `.r2-manifest.yml` to git (contains only metadata)
#    - Add actual binary assets to `.gitignore`
#    - Use `sync: false` for very large files (manual download)
#    - Use `devices: [specific-machine]` for device-specific assets
#    - Update checksums after modifying assets
#    - Keep descriptions clear for team collaboration

# 5. Integration
#    - Works with rclone for R2 access
#    - Integrates with 1Password for credentials
#    - Called by project dev-setup.sh scripts
#    - Version-controlled for history tracking

# ============================================================================
# RELATED DOCUMENTATION
# ============================================================================

# - Manifest Documentation: sync/manifests/README.md
# - Rclone Setup: sync/rclone/README.md
# - Implementation Plan: docs/IMPLEMENTATION-PLAN.md (section 2.4)
# - Project Template: templates/project/dev-setup.sh.template
